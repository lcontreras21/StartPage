// first line is a comment
var {classes:Cc,interfaces:Ci,utils:Cu,manager:Cm} = Components;
const Services = globalThis.Services;

// Set new tab page
try {
    ChromeUtils.defineESModuleGetters(this, {AboutNewTab: "resource:///modules/AboutNewTab.sys.mjs",});  // Version 136 made me change this
    var newTabURL = "file://///home/lcontreras/Repos/StartPage/startpage.html";
    AboutNewTab.newTabURL = newTabURL;
} catch (e) { Cu.reportError(e); } // report errors in the Console

// Modify a couple of key bindings
// TODO: need a way to disable it if on windows
// Test if it doesnt hurt on windows, otherwise leave as is
try {
  function ConfigJS() { Services.obs.addObserver(this, 'chrome-document-global-created', false); }
  ConfigJS.prototype = {
    observe: function (aSubject) { aSubject.addEventListener('DOMContentLoaded', this, {once: true}); },
    handleEvent: function (aEvent) {
      let document = aEvent.originalTarget; let window = document.defaultView; let location = window.location;
      if (/^(chrome:(?!\/\/(global\/content\/commonDialog|browser\/content\/webext-panels)\.x?html)|about:(?!blank))/i.test(location.href)) {
        if (window._gBrowser) {
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          // Swap Open Bookmark library (now CTRL + SHIFT + B) with Toggle Bookmarks (now CTROL + SHIFT + O)
          let mozilla = window.document.getElementById('manBookmarkKb');
          mozilla.setAttribute( "oncommand", "BookmarkingUI.toggleBookmarksToolbar('shortcut');" );
          mozilla.removeAttribute("command");
          let arse = window.document.getElementById('viewBookmarksToolbarKb');
          arse.setAttribute( "command", "Browser:ShowAllBookmarks" );
          arse.removeAttribute("oncommand");
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          // Set Goto Tab I (now CTRL + i), was (ALT + i)
          let key1 = window.document.getElementById('key_selectTab1');
          let key2 = window.document.getElementById('key_selectTab2');
          let key3 = window.document.getElementById('key_selectTab3');
          let key4 = window.document.getElementById('key_selectTab4');
          let key5 = window.document.getElementById('key_selectTab5');
          let key6 = window.document.getElementById('key_selectTab6');
          let key7 = window.document.getElementById('key_selectTab7');
          let key8 = window.document.getElementById('key_selectTab8');
          let keyL = window.document.getElementById('key_selectLastTab');
          key1.setAttribute( "modifiers", "accel" );
          key2.setAttribute( "modifiers", "accel" );
          key3.setAttribute( "modifiers", "accel" );
          key4.setAttribute( "modifiers", "accel" );
          key5.setAttribute( "modifiers", "accel" );
          key6.setAttribute( "modifiers", "accel" );
          key7.setAttribute( "modifiers", "accel" );
          key8.setAttribute( "modifiers", "accel" );
          keyL.setAttribute( "modifiers", "accel" );
          ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }
      }
    }
  };
  if (!Services.appinfo.inSafeMode) { new ConfigJS(); }
} catch(ex) { Cu.reportError(e); };  // report errors in the Console

